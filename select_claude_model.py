#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π Claude
"""

import json
import os
from meeting_processor import load_config

def show_claude_models():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ Claude"""
    models = {
        "claude-3-haiku-20240307": {
            "name": "Claude 3 Haiku",
            "description": "–ë—ã—Å—Ç—Ä–∞—è –∏ —ç–∫–æ–Ω–æ–º–∏—á–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á",
            "speed": "‚ö°‚ö°‚ö°",
            "quality": "‚≠ê‚≠ê‚≠ê",
            "cost": "üí∞",
            "best_for": "–ü—Ä–æ—Å—Ç—ã–µ —Ä–µ–∑—é–º–µ, –±—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞"
        },
        "claude-3-sonnet-20240229": {
            "name": "Claude 3 Sonnet", 
            "description": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á",
            "speed": "‚ö°‚ö°",
            "quality": "‚≠ê‚≠ê‚≠ê‚≠ê",
            "cost": "üí∞üí∞",
            "best_for": "–ü—Ä–æ—Ç–æ–∫–æ–ª—ã –≤—Å—Ç—Ä–µ—á, –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
        },
        "claude-3-opus-20240229": {
            "name": "Claude 3 Opus",
            "description": "–°–∞–º–∞—è –º–æ—â–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á",
            "speed": "‚ö°",
            "quality": "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
            "cost": "üí∞üí∞üí∞",
            "best_for": "–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑, —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã"
        },
        "claude-sonnet-4-20250514": {
            "name": "Claude Sonnet 4",
            "description": "–ù–æ–≤–µ–π—à–∞—è –º–æ–¥–µ–ª—å —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏",
            "speed": "‚ö°‚ö°",
            "quality": "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
            "cost": "üí∞üí∞üí∞",
            "best_for": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ"
        }
    }
    
    print("ü§ñ –î–û–°–¢–£–ü–ù–´–ï –ú–û–î–ï–õ–ò CLAUDE")
    print("=" * 60)
    
    for i, (model_id, info) in enumerate(models.items(), 1):
        print(f"\n{i}. {info['name']} ({model_id})")
        print(f"   üìù {info['description']}")
        print(f"   üöÄ –°–∫–æ—Ä–æ—Å—Ç—å: {info['speed']}")
        print(f"   ‚≠ê –ö–∞—á–µ—Å—Ç–≤–æ: {info['quality']}")
        print(f"   üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {info['cost']}")
        print(f"   üéØ –õ—É—á—à–µ –≤—Å–µ–≥–æ –¥–ª—è: {info['best_for']}")
    
    return models

def update_config_model(config_file: str, new_model: str):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –º–æ–¥–µ–ª—å –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        config = load_config(config_file)
        if not config:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å {config_file}")
            return False
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–¥–µ–ª—å
        if "settings" not in config:
            config["settings"] = {}
        
        old_model = config["settings"].get("claude_model", "–Ω–µ —É–∫–∞–∑–∞–Ω–∞")
        config["settings"]["claude_model"] = new_model
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open(config_file, "w", encoding="utf-8") as f:
            json.dump(config, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞:")
        print(f"   –°—Ç–∞—Ä–∞—è –º–æ–¥–µ–ª—å: {old_model}")
        print(f"   –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å: {new_model}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_claude_model(model_id: str, api_key: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å Claude"""
    try:
        import anthropic
        
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É—é –º–æ–¥–µ–ª—å {model_id}...")
        
        client = anthropic.Anthropic(api_key=api_key)
        
        test_prompt = """
–°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞:

"–°–µ–≥–æ–¥–Ω—è –æ–±—Å—É–∂–¥–∞–ª–∏ –ø–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∫–≤–∞—Ä—Ç–∞–ª. –†–µ—à–∏–ª–∏ —É–≤–µ–ª–∏—á–∏—Ç—å –±—é–¥–∂–µ—Ç –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –Ω–∞ 20%. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π - –ò–≤–∞–Ω–æ–≤. –°—Ä–æ–∫ - –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞."

–ü—Ä–æ—Ç–æ–∫–æ–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑–¥–µ–ª—ã: –†–µ—à–µ–Ω–∏—è, –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ, –°—Ä–æ–∫–∏.
"""
        
        response = client.messages.create(
            model=model_id,
            max_tokens=500,
            messages=[{"role": "user", "content": test_prompt}]
        )
        
        result = response.content[0].text
        
        print(f"‚úÖ –ú–æ–¥–µ–ª—å {model_id} —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üìù –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:")
        print("-" * 40)
        print(result[:300] + "..." if len(result) > 300 else result)
        print("-" * 40)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–æ–¥–µ–ª–∏ {model_id}: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ù–ê–°–¢–†–û–ô–ö–ê –ú–û–î–ï–õ–ò CLAUDE")
    print("=" * 40)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
    models = show_claude_models()
    model_list = list(models.keys())
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = load_config("config.json")
    current_model = config.get("settings", {}).get("claude_model", "–Ω–µ —É–∫–∞–∑–∞–Ω–∞")
    
    print(f"\nüìä –¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å: {current_model}")
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —á—Ç–æ –¥–µ–ª–∞—Ç—å
    print(f"\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print(f"1. –ò–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print(f"2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å")
    print(f"3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å")
    print(f"4. –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    print(f"5. –í—ã–π—Ç–∏")
    
    choice = input(f"\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
    
    if choice == "1":
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
        print(f"\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å (1-{len(model_list)}):")
        model_choice = input("–ù–æ–º–µ—Ä –º–æ–¥–µ–ª–∏: ").strip()
        
        if model_choice.isdigit() and 1 <= int(model_choice) <= len(model_list):
            new_model = model_list[int(model_choice) - 1]
            
            if update_config_model("config.json", new_model):
                print(f"\nüéâ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {new_model}")
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–æ–¥–µ–ª–∏")
    
    elif choice == "2":
        # –¢–µ—Å—Ç —Ç–µ–∫—É—â–µ–π –º–æ–¥–µ–ª–∏
        api_key = config.get("api_keys", {}).get("claude")
        
        if not api_key or api_key == "your_claude_api_key_here":
            print("‚ùå API –∫–ª—é—á Claude –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ config.json")
            return
        
        if current_model != "–Ω–µ —É–∫–∞–∑–∞–Ω–∞":
            test_claude_model(current_model, api_key)
        else:
            print("‚ùå –ú–æ–¥–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    
    elif choice == "3":
        # –¢–µ—Å—Ç –¥—Ä—É–≥–æ–π –º–æ–¥–µ–ª–∏
        api_key = config.get("api_keys", {}).get("claude")
        
        if not api_key or api_key == "your_claude_api_key_here":
            print("‚ùå API –∫–ª—é—á Claude –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ config.json")
            return
        
        print(f"\n–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (1-{len(model_list)}):")
        model_choice = input("–ù–æ–º–µ—Ä –º–æ–¥–µ–ª–∏: ").strip()
        
        if model_choice.isdigit() and 1 <= int(model_choice) <= len(model_list):
            test_model = model_list[int(model_choice) - 1]
            test_claude_model(test_model, api_key)
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–æ–¥–µ–ª–∏")
    
    elif choice == "4":
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –í–´–ë–û–†–£ –ú–û–î–ï–õ–ò:")
        print(f"=" * 50)
        
        recommendations = [
            ("–ö–æ—Ä–æ—Ç–∫–∏–µ –≤—Å—Ç—Ä–µ—á–∏ (< 30 –º–∏–Ω)", "Claude 3 Haiku", "–ë—ã—Å—Ç—Ä–æ –∏ —ç–∫–æ–Ω–æ–º–∏—á–Ω–æ"),
            ("–û–±—ã—á–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏ (30-60 –º–∏–Ω)", "Claude 3 Sonnet", "–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ"),
            ("–î–ª–∏–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏ (> 60 –º–∏–Ω)", "Claude 3 Sonnet", "–•–æ—Ä–æ—à–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å –±–æ–ª—å—à–∏–º–∏ –æ–±—ä–µ–º–∞–º–∏"),
            ("–í–∞–∂–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏", "Claude 3 Opus", "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–∞"),
            ("–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏", "Claude Sonnet 4", "–°–∞–º—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
        ]
        
        for scenario, model, reason in recommendations:
            print(f"üìã {scenario}")
            print(f"   ü§ñ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: {model}")
            print(f"   üí≠ –ü—Ä–∏—á–∏–Ω–∞: {reason}")
            print()
    
    elif choice == "5":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        return
    
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ—â–µ —Ä–∞–∑
    if input(f"\n–ó–∞–ø—É—Å—Ç–∏—Ç—å –µ—â–µ —Ä–∞–∑? (y/n): ").lower().startswith('y'):
        main()

if __name__ == "__main__":
    main()