#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ü–∏–π Deepgram API
"""

import json
import os
from meeting_processor import load_config

def show_deepgram_options():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ Deepgram"""
    options = {
        "punctuate": {
            "description": "–î–æ–±–∞–≤–ª—è–µ—Ç –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –≤ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç",
            "default": True,
            "impact": "–£–ª—É—á—à–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞",
            "recommended": "–í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω–æ"
        },
        "diarize": {
            "description": "–†–∞–∑–¥–µ–ª—è–µ—Ç —Ä–µ—á—å –ø–æ —Å–ø–∏–∫–µ—Ä–∞–º (Speaker 0, Speaker 1, ...)",
            "default": True,
            "impact": "–ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–ª–∏—á–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤—Å—Ç—Ä–µ—á–∏",
            "recommended": "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –≤—Å—Ç—Ä–µ—á"
        },
        "smart_format": {
            "description": "–£–º–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (—á–∏—Å–ª–∞, –¥–∞—Ç—ã, –≤–∞–ª—é—Ç—ã)",
            "default": True,
            "impact": "–£–ª—É—á—à–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤",
            "recommended": "–í–∫–ª—é—á–µ–Ω–æ –¥–ª—è –¥–µ–ª–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á"
        },
        "paragraphs": {
            "description": "–†–∞–∑–¥–µ–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã –ø–æ —Å–º—ã—Å–ª–æ–≤—ã–º –±–ª–æ–∫–∞–º",
            "default": True,
            "impact": "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç, —É–ª—É—á—à–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ—Å—Ç—å",
            "recommended": "–û—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π"
        },
        "utterances": {
            "description": "–î–æ–±–∞–≤–ª—è–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ –∫–∞–∂–¥–æ–º –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–∏",
            "default": False,
            "impact": "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–ø–∏–∫–µ—Ä–∞—Ö",
            "recommended": "–î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"
        },
        "summarize": {
            "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –∏–∑–ª–æ–∂–µ–Ω–∏—è",
            "default": False,
            "impact": "Deepgram —Å–æ–∑–¥–∞–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–µ–∑—é–º–µ",
            "recommended": "–ö–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å Claude, –ª—É—á—à–µ –æ—Ç–∫–ª—é—á–∏—Ç—å"
        },
        "detect_language": {
            "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞",
            "default": False,
            "impact": "–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –º–Ω–æ–≥–æ—è–∑—ã—á–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á",
            "recommended": "–í–∫–ª—é—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
        }
    }
    
    print("üé§ –û–ü–¶–ò–ò DEEPGRAM API")
    print("=" * 60)
    
    for option, info in options.items():
        status = "‚úÖ" if info["default"] else "‚ùå"
        print(f"\n{status} {option.upper()}")
        print(f"   üìù {info['description']}")
        print(f"   üéØ –í–ª–∏—è–Ω–∏–µ: {info['impact']}")
        print(f"   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {info['recommended']}")
    
    return options

def get_current_config():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Deepgram"""
    config = load_config("config.json")
    return config.get("deepgram_options", {})

def update_deepgram_options(new_options):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ–ø—Ü–∏–∏ Deepgram –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        config = load_config("config.json")
        if not config:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å config.json")
            return False
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø—Ü–∏–∏
        config["deepgram_options"] = new_options
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open("config.json", "w", encoding="utf-8") as f:
            json.dump(config, f, ensure_ascii=False, indent=2)
        
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Deepgram –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def interactive_config():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø—Ü–∏–π"""
    print("üîß –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê DEEPGRAM")
    print("=" * 50)
    
    options_info = show_deepgram_options()
    current_config = get_current_config()
    
    print(f"\nüìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    for option, value in current_config.items():
        status = "‚úÖ" if value else "‚ùå"
        print(f"   {status} {option}")
    
    print(f"\n–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø—Ü–∏–π (y/n –¥–ª—è –∫–∞–∂–¥–æ–π –æ–ø—Ü–∏–∏):")
    new_config = {}
    
    for option, info in options_info.items():
        current_value = current_config.get(option, info["default"])
        current_status = "–≤–∫–ª—é—á–µ–Ω–∞" if current_value else "–æ—Ç–∫–ª—é—á–µ–Ω–∞"
        
        print(f"\nüé§ {option.upper()}")
        print(f"   üìù {info['description']}")
        print(f"   üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {current_status}")
        print(f"   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {info['recommended']}")
        
        while True:
            choice = input(f"   –í–∫–ª—é—á–∏—Ç—å {option}? (y/n) [—Ç–µ–∫—É—â–µ–µ: {'y' if current_value else 'n'}]: ").strip().lower()
            
            if choice == '':
                new_config[option] = current_value
                break
            elif choice in ['y', 'yes', '–¥–∞']:
                new_config[option] = True
                break
            elif choice in ['n', 'no', '–Ω–µ—Ç']:
                new_config[option] = False
                break
            else:
                print("   ‚ùå –í–≤–µ–¥–∏—Ç–µ y (–¥–∞) –∏–ª–∏ n (–Ω–µ—Ç)")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"\nüìã –ò–¢–û–ì–û–í–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:")
    print("=" * 30)
    for option, value in new_config.items():
        status = "‚úÖ" if value else "‚ùå"
        print(f"   {status} {option}")
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    confirm = input(f"\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é? (y/n): ").strip().lower()
    
    if confirm in ['y', 'yes', '–¥–∞']:
        if update_deepgram_options(new_config):
            print(f"\nüéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
            return True
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏")
            return False
    else:
        print(f"\nüö´ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã")
        return False

def preset_configs():
    """–ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    presets = {
        "basic": {
            "name": "–ë–∞–∑–æ–≤–∞—è",
            "description": "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –≤—Å—Ç—Ä–µ—á",
            "config": {
                "punctuate": True,
                "diarize": True,
                "smart_format": False,
                "paragraphs": False,
                "utterances": False,
                "summarize": False,
                "detect_language": False
            }
        },
        "standard": {
            "name": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è",
            "description": "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –≤—Å—Ç—Ä–µ—á",
            "config": {
                "punctuate": True,
                "diarize": True,
                "smart_format": True,
                "paragraphs": True,
                "utterances": False,
                "summarize": False,
                "detect_language": False
            }
        },
        "advanced": {
            "name": "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è",
            "description": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞",
            "config": {
                "punctuate": True,
                "diarize": True,
                "smart_format": True,
                "paragraphs": True,
                "utterances": True,
                "summarize": False,
                "detect_language": False
            }
        },
        "multilingual": {
            "name": "–ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–∞—è",
            "description": "–î–ª—è –≤—Å—Ç—Ä–µ—á –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö",
            "config": {
                "punctuate": True,
                "diarize": True,
                "smart_format": True,
                "paragraphs": True,
                "utterances": False,
                "summarize": False,
                "detect_language": True
            }
        }
    }
    
    print("üéØ –ü–†–ï–î–£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò")
    print("=" * 50)
    
    for i, (key, preset) in enumerate(presets.items(), 1):
        print(f"\n{i}. {preset['name']}")
        print(f"   üìù {preset['description']}")
        print(f"   üé§ –û–ø—Ü–∏–∏: {', '.join([k for k, v in preset['config'].items() if v])}")
    
    choice = input(f"\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (1-{len(presets)}) –∏–ª–∏ Enter –¥–ª—è –æ—Ç–º–µ–Ω—ã: ").strip()
    
    if choice.isdigit() and 1 <= int(choice) <= len(presets):
        preset_key = list(presets.keys())[int(choice) - 1]
        selected_preset = presets[preset_key]
        
        print(f"\n‚úÖ –í—ã–±—Ä–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {selected_preset['name']}")
        
        if update_deepgram_options(selected_preset['config']):
            print("üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return False
    else:
        print("üö´ –û—Ç–º–µ–Ω–µ–Ω–æ")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üé§ –ù–ê–°–¢–†–û–ô–ö–ê DEEPGRAM API")
    print("=" * 40)
    
    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("2. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
    print("3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
    print("4. –ü–æ–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø—Ü–∏–π")
    print("5. –í—ã–π—Ç–∏")
    
    choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
    
    if choice == "1":
        # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        current_config = get_current_config()
        if current_config:
            print("\nüìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Deepgram:")
            print("=" * 30)
            for option, value in current_config.items():
                status = "‚úÖ" if value else "‚ùå"
                print(f"   {status} {option}")
        else:
            print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Deepgram –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ config.json")
    
    elif choice == "2":
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
        interactive_config()
    
    elif choice == "3":
        # –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        preset_configs()
    
    elif choice == "4":
        # –û–ø–∏—Å–∞–Ω–∏–µ –æ–ø—Ü–∏–π
        show_deepgram_options()
    
    elif choice == "5":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        return
    
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ—â–µ —Ä–∞–∑
    if input(f"\n–ó–∞–ø—É—Å—Ç–∏—Ç—å –µ—â–µ —Ä–∞–∑? (y/n): ").lower().startswith('y'):
        main()

if __name__ == "__main__":
    main()