#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import os
import sys
from datetime import datetime
from pathlib import Path

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
from run_web import WorkingMeetingWebApp

class DemoMeetingWebApp(WorkingMeetingWebApp):
    """–î–µ–º–æ-–≤–µ—Ä—Å–∏—è —Å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    def __init__(self, config_file: str = "config.json"):
        super().__init__(config_file)
        self.add_demo_data()
    
    def add_demo_data(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
        test_job_id = "demo-job-123"
        
        # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        transcript_path = Path('web_output/test-job-123/test_meeting_transcript.txt')
        summary_path = Path('web_output/test-job-123/test_meeting_summary.md')
        
        if not transcript_path.exists() or not summary_path.exists():
            print("‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∏—Ö...")
            transcript_path.parent.mkdir(parents=True, exist_ok=True)
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç
            with open(transcript_path, 'w', encoding='utf-8') as f:
                f.write("""–¢–†–ê–ù–°–ö–†–ò–ü–¢ –í–°–¢–†–ï–ß–ò

–î–∞—Ç–∞: 2025-06-03
–í—Ä–µ–º—è: 12:30

Speaker 1: –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à—É –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é –≤—Å—Ç—Ä–µ—á—É –ø–æ –ø—Ä–æ–µ–∫—Ç—É. –°–µ–≥–æ–¥–Ω—è –º—ã –æ–±—Å—É–¥–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –∑–∞–¥–∞—á–∞–º.

Speaker 2: –°–ø–∞—Å–∏–±–æ. –Ø —Ö–æ—Ç–µ–ª –±—ã –Ω–∞—á–∞—Ç—å —Å –æ—Ç—á–µ—Ç–∞ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –º—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é API –∏ –Ω–∞—á–∞–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.

Speaker 1: –û—Ç–ª–∏—á–Ω–æ. –ö–∞–∫–∏–µ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –±–ª–æ–∫–µ—Ä—ã?

Speaker 2: –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ - —ç—Ç–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ó–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω–µ–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ.

Speaker 3: –ü–æ —ç—Ç–æ–º—É –ø–æ–≤–æ–¥—É - —è —É–∂–µ –Ω–∞—á–∞–ª –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∏–Ω–¥–µ–∫—Å–æ–≤. –ü–ª–∞–Ω–∏—Ä—É—é –∑–∞–≤–µ—Ä—à–∏—Ç—å –∫ –ø—è—Ç–Ω–∏—Ü–µ.

Speaker 1: –•–æ—Ä–æ—à–æ. –ß—Ç–æ –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏?

Speaker 4: –ú—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫—Ä–µ–∞—Ç–∏–≤–æ–≤. –ü–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –Ω–∞ 15%.

Speaker 1: –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ. –ö–∞–∫–∏–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏?

Speaker 2: –ù—É–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫ —Å—Ä–µ–¥–µ, –∑–∞—Ç–µ–º –º–æ–∂–µ–º –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Ä–µ–ª–∏–∑—É.

Speaker 3: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ë–î –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞ –∫ –ø—è—Ç–Ω–∏—Ü–µ, –∫–∞–∫ —è —Å–∫–∞–∑–∞–ª.

Speaker 4: –ü—Ä–æ–¥–æ–ª–∂–∏–º A/B —Ç–µ—Å—Ç –µ—â–µ –Ω–µ–¥–µ–ª—é, –∑–∞—Ç–µ–º –ø—Ä–∏–º–µ–º —Ä–µ—à–µ–Ω–∏–µ –æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–∏.

Speaker 1: –û—Ç–ª–∏—á–Ω–æ. –í—Å—Ç—Ä–µ—Ç–∏–º—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è. –°–ø–∞—Å–∏–±–æ –≤—Å–µ–º.
""")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª
            with open(summary_path, 'w', encoding='utf-8') as f:
                f.write("""# –ü–†–û–¢–û–ö–û–õ –í–°–¢–†–ï–ß–ò

## –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
- **–î–∞—Ç–∞:** 03.06.2025
- **–í—Ä–µ–º—è:** 12:30
- **–¢–∏–ø:** –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç—É
- **–®–∞–±–ª–æ–Ω:** Standard

## –£—á–∞—Å—Ç–Ω–∏–∫–∏
- Speaker 1 - –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞
- Speaker 2 - –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫
- Speaker 3 - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ë–î
- Speaker 4 - –ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥

## –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã

### –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
- ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è API
- üîÑ –ù–∞—á–∞—Ç–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –ë–î

### –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥
- ‚úÖ –ó–∞–ø—É—â–µ–Ω–æ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- üìà –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –Ω–∞ 15%

## –ó–∞–¥–∞—á–∏
- **Speaker 2:** –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫ —Å—Ä–µ–¥–µ
- **Speaker 3:** –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ë–î –¥–æ –ø—è—Ç–Ω–∏—Ü—ã
- **Speaker 4:** –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å A/B —Ç–µ—Å—Ç –µ—â–µ –Ω–µ–¥–µ–ª—é

## –°–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞
–°–ª–µ–¥—É—é—â–∞—è –Ω–µ–¥–µ–ª—è, —Ç–æ –∂–µ –≤—Ä–µ–º—è
""")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ –ø–∞–º—è—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        with self.jobs_lock:
            self.processing_jobs[test_job_id] = {
                'status': 'completed',
                'filename': 'demo_meeting.mp3',
                'template': 'standard',
                'file_path': 'web_uploads/demo_meeting.mp3',
                'created_at': datetime.now(),
                'progress': 100,
                'message': '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!',
                'transcript_file': str(transcript_path.absolute()),
                'summary_file': str(summary_path.absolute()),
                'completed_at': datetime.now()
            }
        
        print(f"‚úÖ –î–µ–º–æ-–∑–∞–¥–∞—á–∞ {test_job_id} –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        print(f"üìÑ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç: {transcript_path}")
        print(f"üìã –ü—Ä–æ—Ç–æ–∫–æ–ª: {summary_path}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ"""
    import argparse
    
    parser = argparse.ArgumentParser(description="–î–µ–º–æ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    parser.add_argument("-c", "--config", default="config.json", help="–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    parser.add_argument("--host", default="127.0.0.1", help="IP –∞–¥—Ä–µ—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
    parser.add_argument("--port", type=int, default=5002, help="–ü–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
    parser.add_argument("--debug", action="store_true", help="–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏")
    
    args = parser.parse_args()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        demo_app = DemoMeetingWebApp(args.config)
        
        print("\n" + "="*60)
        print("üöÄ MEETING PROCESSOR DEMO WEB SERVER")
        print("="*60)
        print(f"üì± –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:{args.port}")
        print("üéØ –î–µ–º–æ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
        print("üîß –ù–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞—Ö")
        print("\nüí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("="*60)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        demo_app.run(host=args.host, port=args.port, debug=args.debug)
        
    except KeyboardInterrupt:
        print("\nüëã –î–µ–º–æ-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥–µ–º–æ-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return 1
    
    return 0

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)
