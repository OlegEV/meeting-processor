# Default values for meeting-processor
# This is a YAML-formatted file.

# Global settings
global:
  imageRegistry: "nexus.netlab.local"
  imagePullSecrets: []

# Namespace
namespace: meeting-processor

# Web service configuration
web:
  enabled: true
  image:
    repository: meeting-processor-web
    tag: "v1.0.0"
    pullPolicy: Always
  
  replicaCount: 3
  
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  
  # Gunicorn configuration
  gunicorn:
    workers: 1
    threads: 2
    timeout: 300
    maxRequests: 1000
    maxRequestsJitter: 100
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 90
    periodSeconds: 30
    timeoutSeconds: 15
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 45
    periodSeconds: 15
    timeoutSeconds: 10
    failureThreshold: 3
  
  startupProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30

# Bot service configuration
bot:
  enabled: true
  image:
    repository: meeting-processor-bot
    tag: "v1.0.0"
    pullPolicy: Always
  
  replicaCount: 1
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  # Health checks
  livenessProbe:
    exec:
      command:
        - python
        - -c
        - "import sys; sys.exit(0)"
    initialDelaySeconds: 60
    periodSeconds: 60
    timeoutSeconds: 15
    failureThreshold: 3
  
  readinessProbe:
    exec:
      command:
        - python
        - -c
        - "import sys; sys.exit(0)"
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "200m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "2m"
    nginx.ingress.kubernetes.io/client-max-body-size: "200m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  
  hosts:
    - host: meeting-processor.ekassir.com
      paths:
        - path: /
          pathType: Prefix
  
  tls:
    - secretName: meeting-processor-tls
      hosts:
        - meeting-processor.ekassir.com

# Persistent storage
persistence:
  enabled: true
  storageClass: ""  # Use default storage class
  
  logs:
    size: 5Gi
    accessMode: ReadWriteMany
  
  webUploads:
    size: 10Gi
    accessMode: ReadWriteMany
  
  webOutput:
    size: 10Gi
    accessMode: ReadWriteMany
  
  botTemp:
    size: 5Gi
    accessMode: ReadWriteMany
  
  botOutput:
    size: 10Gi
    accessMode: ReadWriteMany

# Configuration
config:
  deepgram:
    model: "nova-2"
    language: "ru"
    smartFormat: true
    punctuate: true
    diarize: true
    paragraphs: true
    utterances: true
    summarize: false
    detectLanguage: false
  
  claude:
    model: "claude-sonnet-4-20250514"
    maxTokens: 2000
    temperature: 0.3
  
  processing:
    chunkDurationMinutes: 15
    maxFileSizeMb: 25
    maxDurationMinutes: 15
    requestPauseSeconds: 5
    maxRetries: 3
    keepAudioFile: false
    supportedFormats:
      video:
        - ".mp4"
        - ".avi"
        - ".mov"
        - ".mkv"
        - ".wmv"
        - ".webm"
      nativeAudio:
        - ".mp3"
        - ".wav"
        - ".flac"
        - ".aac"
        - ".m4a"
        - ".ogg"
      convertAudio:
        - ".wma"
        - ".opus"
    deepgramTimeoutSeconds: 300

# Templates configuration
templates:
  defaultTemplate: "standard"
  templateSettings:
    includeTechnicalInfo: true
    includeFileDatetime: true
    language: "ru"
    maxTokens: 2000
    autoDetectMeetingType: false
  
  templateDescriptions:
    standard: "Универсальный шаблон для любых встреч"
    business: "Официальный протокол для деловых встреч"
    project: "Фокус на управлении проектами и задачами"
    standup: "Краткий формат для ежедневных стендапов"
    interview: "Структурированный отчет об интервью"
    brainstorm: "Организация идей и креативных сессий"
    review: "Ретроспективы и анализ результатов"
    planning: "Стратегическое планирование и постановка целей"
    technical: "Технические обсуждения и архитектурные решения"
    sales: "Встречи по продажам и работе с клиентами"
  
  meetingTypeKeywords:
    standup:
      - "стендап"
      - "standup"
      - "daily"
      - "что делал"
      - "что буду делать"
      - "блокеры"
      - "вчера"
      - "сегодня"
      - "планы на день"
    project:
      - "проект"
      - "milestone"
      - "дедлайн"
      - "задача"
      - "спринт"
      - "backlog"
      - "риск"
      - "планирование"
      - "этап"
    business:
      - "бюджет"
      - "roi"
      - "прибыль"
      - "стратегия"
      - "клиент"
      - "продажи"
      - "договор"
      - "партнер"
      - "инвестиции"
    interview:
      - "интервью"
      - "кандидат"
      - "опыт работы"
      - "навыки"
      - "почему выбрали"
      - "зарплата"
      - "собеседование"
    brainstorm:
      - "идея"
      - "мозговой штурм"
      - "креатив"
      - "предложение"
      - "как если"
      - "а что если"
      - "brainstorm"
    review:
      - "ретроспектива"
      - "что прошло хорошо"
      - "что улучшить"
      - "проблемы"
      - "feedback"
      - "анализ"
      - "retrospective"
    technical:
      - "код"
      - "архитектура"
      - "баг"
      - "deploy"
      - "api"
      - "database"
      - "server"
      - "разработка"
      - "система"
    sales:
      - "продажа"
      - "клиент"
      - "сделка"
      - "kpi"
      - "конверсия"
      - "лид"
      - "crm"
      - "воронка"
      - "закрытие"
    planning:
      - "план"
      - "стратегия"
      - "цели"
      - "roadmap"
      - "планирование"
      - "задачи"
      - "приоритеты"
      - "ресурсы"
  
  autoDetectionSettings:
    minKeywordMatches: 2
    confidenceThreshold: 0.6
    fallbackTemplate: "standard"

# Secrets (will be created externally or via sealed-secrets)
secrets:
  # These should be provided via external secret management
  deepgramApiKey: ""
  claudeApiKey: ""
  telegramBotToken: ""
  
  # Bot configuration
  botConfig:
    allowedUsers: []
    maxFileSize: 26214400  # 25MB in bytes
    supportedFormats:
      - "mp3"
      - "wav"
      - "m4a"
      - "ogg"
      - "flac"
      - "mp4"
      - "avi"
      - "mov"
      - "mkv"
      - "wmv"
      - "webm"
      - "aac"
      - "wma"
      - "opus"
  
  # Team configuration
  teamConfig:
    teams:
      default:
        name: "Команда по умолчанию"
        members: []

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Environment
environment: production