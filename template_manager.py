#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –≤—Å—Ç—Ä–µ—á
"""

import os
import sys
from pathlib import Path

try:
    from meeting_templates import MeetingTemplates
except ImportError:
    print("‚ùå –§–∞–π–ª meeting_templates.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    sys.exit(1)

def show_available_templates():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã"""
    print("üìù –î–û–°–¢–£–ü–ù–´–ï –®–ê–ë–õ–û–ù–´ –ü–†–û–¢–û–ö–û–õ–û–í")
    print("=" * 50)
    
    templates = MeetingTemplates()
    available = templates.get_available_templates()
    
    print("üèóÔ∏è –í–°–¢–†–û–ï–ù–ù–´–ï –®–ê–ë–õ–û–ù–´:")
    for template_name in available['builtin']:
        if hasattr(templates, 'config') and 'template_descriptions' in templates.config:
            description = templates.config['template_descriptions'].get(template_name, "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
            print(f"   üìã {template_name:12} - {description}")
        else:
            print(f"   üìã {template_name}")
    
    if available['custom']:
        print("\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –®–ê–ë–õ–û–ù–´:")
        for template_name in available['custom']:
            print(f"   üìã {template_name}")
    else:
        print("\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")

def preview_template():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–∞"""
    templates = MeetingTemplates()
    available = templates.get_available_templates()
    
    print("üìñ –ü–†–ï–í–¨–Æ –®–ê–ë–õ–û–ù–ê")
    print("=" * 30)
    
    template_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: ").strip()
    
    if template_name not in available['all']:
        print(f"‚ùå –®–∞–±–ª–æ–Ω '{template_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        import datetime
        test_datetime_info = {
            'date': '27.05.2025',
            'time': '14:30:00',
            'datetime_full': '27.05.2025 14:30:00',
            'weekday_ru': '–≤—Ç–æ—Ä–Ω–∏–∫'
        }
        
        template = templates.get_template(template_name, "–¢–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –≤—Å—Ç—Ä–µ—á–∏...", test_datetime_info)
        
        print(f"\nüìù –®–∞–±–ª–æ–Ω '{template_name}':")
        print("-" * 50)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 800 —Å–∏–º–≤–æ–ª–æ–≤
        preview = template[:800]
        if len(template) > 800:
            preview += "\n\n... [–æ–±—Ä–µ–∑–∞–Ω–æ –¥–ª—è –ø—Ä–µ–≤—å—é] ..."
        
        print(preview)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞: {e}")

def create_custom_template():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —à–∞–±–ª–æ–Ω"""
    print("‚ú® –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ì–û –®–ê–ë–õ–û–ù–ê")
    print("=" * 45)
    
    templates = MeetingTemplates()
    
    name = input("–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞: ").strip()
    if not name:
        print("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return
    
    print(f"\n–í–≤–µ–¥–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è '{name}':")
    print("üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    print("   {datetime_info} - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–µ/–≤—Ä–µ–º–µ–Ω–∏")
    print("   {datetime_display} - –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞")
    print("   {transcript} - —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –≤—Å—Ç—Ä–µ—á–∏")
    print("\nüí° –ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤–≤–æ–¥ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π:")
    
    lines = []
    while True:
        try:
            line = input()
            if not line:
                break
            lines.append(line)
        except EOFError:
            break
    
    if not lines:
        print("‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return
    
    template_text = "\n".join(lines)
    
    try:
        templates.add_custom_template(name, template_text)
        print(f"‚úÖ –®–∞–±–ª–æ–Ω '{name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞: {e}")

def test_auto_detection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –≤—Å—Ç—Ä–µ—á–∏"""
    print("ü§ñ –¢–ï–°–¢ –ê–í–¢–û–û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –¢–ò–ü–ê –í–°–¢–†–ï–ß–ò")
    print("=" * 40)
    
    templates = MeetingTemplates()
    
    print("–í–≤–µ–¥–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞:")
    print("(–Ω–∞–ø—Ä–∏–º–µ—Ä: '–≤—á–µ—Ä–∞ —è –¥–µ–ª–∞–ª –∑–∞–¥–∞—á—É –ø–æ –ø—Ä–æ–µ–∫—Ç—É, —Å–µ–≥–æ–¥–Ω—è –ø–ª–∞–Ω–∏—Ä—É—é –∑–∞–Ω—è—Ç—å—Å—è –±–∞–≥–æ–º')")
    
    test_text = input("–¢–µ–∫—Å—Ç: ").strip()
    
    if not test_text:
        # –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_cases = [
            ("–≤—á–µ—Ä–∞ —è –¥–µ–ª–∞–ª –∑–∞–¥–∞—á—É –ø–æ –ø—Ä–æ–µ–∫—Ç—É, —Å–µ–≥–æ–¥–Ω—è –ø–ª–∞–Ω–∏—Ä—É—é –∑–∞–Ω—è—Ç—å—Å—è –±–∞–≥–æ–º, –µ—Å—Ç—å –±–ª–æ–∫–µ—Ä—ã", "standup"),
            ("–æ–±—Å—É–∂–¥–∞–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å–∏—Å—Ç–µ–º—ã, –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥–∏ –≤ API", "technical"),
            ("–∫–ª–∏–µ–Ω—Ç —Ö–æ—á–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –±—é–¥–∂–µ—Ç, –æ–±—Å—É–∂–¥–∞–µ–º ROI –∏ –ø—Ä–∏–±—ã–ª—å", "business"),
            ("–º–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º –Ω–æ–≤—ã—Ö –∏–¥–µ–π –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", "brainstorm"),
            ("—á—Ç–æ –ø—Ä–æ—à–ª–æ —Ö–æ—Ä–æ—à–æ –≤ —Å–ø—Ä–∏–Ω—Ç–µ, –∫–∞–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å", "review")
        ]
        
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–∏–º–µ—Ä–∞—Ö:")
        for text, expected in test_cases:
            detected = templates._detect_meeting_type(text)
            status = "‚úÖ" if detected == expected else "‚ùå"
            print(f"{status} '{text[:50]}...' -> {detected} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected})")
    else:
        detected_type = templates._detect_meeting_type(test_text)
        print(f"\nüéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–∏–ø: {detected_type}")

def template_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —à–∞–±–ª–æ–Ω–∞–º"""
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –®–ê–ë–õ–û–ù–û–í")
    print("=" * 30)
    
    templates = MeetingTemplates()
    available = templates.get_available_templates()
    
    print(f"üèóÔ∏è –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤: {len(available['builtin'])}")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤: {len(available['custom'])}")
    print(f"üìù –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ: {len(available['all'])}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if hasattr(templates, 'config'):
        config = templates.config
        print(f"\n‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò:")
        print(f"   üìã –®–∞–±–ª–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config.get('default_template', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
        
        settings = config.get('template_settings', {})
        print(f"   ü§ñ –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞: {'–î–∞' if settings.get('auto_detect_meeting_type', False) else '–ù–µ—Ç'}")
        print(f"   üìÖ –í–∫–ª—é—á–∞—Ç—å –¥–∞—Ç—É —Ñ–∞–π–ª–∞: {'–î–∞' if settings.get('include_file_datetime', True) else '–ù–µ—Ç'}")
        print(f"   üîß –í–∫–ª—é—á–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: {'–î–∞' if settings.get('include_technical_info', True) else '–ù–µ—Ç'}")
        print(f"   üéØ –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤: {settings.get('max_tokens', 2000)}")

def export_template():
    """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —à–∞–±–ª–æ–Ω –≤ —Ñ–∞–π–ª"""
    print("üì§ –≠–ö–°–ü–û–†–¢ –®–ê–ë–õ–û–ù–ê")
    print("=" * 25)
    
    templates = MeetingTemplates()
    available = templates.get_available_templates()
    
    template_name = input("–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞: ").strip()
    
    if template_name not in available['all']:
        print(f"‚ùå –®–∞–±–ª–æ–Ω '{template_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    output_file = input(f"–ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {template_name}_template.txt): ").strip()
    if not output_file:
        output_file = f"{template_name}_template.txt"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω
        if template_name in available['custom']:
            template_content = templates.config['custom_templates'][template_name]
        else:
            # –î–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
            template_content = templates.builtin_templates[template_name]()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(f"# –®–∞–±–ª–æ–Ω: {template_name}\n")
            f.write(f"# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {__import__('datetime').datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
            f.write(template_content)
        
        print(f"‚úÖ –®–∞–±–ª–æ–Ω '{template_name}' —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ '{output_file}'")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")

def import_template():
    """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —à–∞–±–ª–æ–Ω –∏–∑ —Ñ–∞–π–ª–∞"""
    print("üì• –ò–ú–ü–û–†–¢ –®–ê–ë–õ–û–ù–ê")
    print("=" * 25)
    
    file_path = input("–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —à–∞–±–ª–æ–Ω–∞: ").strip().strip('"')
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª '{file_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    template_name = input("–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º–æ–≥–æ —à–∞–±–ª–æ–Ω–∞: ").strip()
    
    if not template_name:
        print("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –£–±–∏—Ä–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
        lines = content.split('\n')
        template_lines = []
        skip_comments = True
        
        for line in lines:
            if skip_comments and line.startswith('#'):
                continue
            elif skip_comments and line.strip() == '':
                continue
            else:
                skip_comments = False
                template_lines.append(line)
        
        template_content = '\n'.join(template_lines)
        
        templates = MeetingTemplates()
        templates.add_custom_template(template_name, template_content)
        
        print(f"‚úÖ –®–∞–±–ª–æ–Ω '{template_name}' —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏–∑ '{file_path}'")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ: {e}")

def reset_templates_config():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —à–∞–±–ª–æ–Ω–æ–≤ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    print("üîÑ –°–ë–†–û–° –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –®–ê–ë–õ–û–ù–û–í")
    print("=" * 40)
    
    confirm = input("‚ö†Ô∏è –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã! –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ").strip().lower()
    
    if confirm not in ['yes', 'y', '–¥–∞', '–¥']:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    
    try:
        config_file = "templates_config.json"
        if os.path.exists(config_file):
            os.remove(config_file)
            print(f"üóëÔ∏è –§–∞–π–ª '{config_file}' —É–¥–∞–ª–µ–Ω")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        templates = MeetingTemplates()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ —Å–±—Ä–æ—à–µ–Ω–∞ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–µ–Ω—é"""
    print("üìù –ú–ï–ù–ï–î–ñ–ï–† –®–ê–ë–õ–û–ù–û–í –ü–†–û–¢–û–ö–û–õ–û–í –í–°–¢–†–ï–ß")
    print("=" * 50)
    
    while True:
        print("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üìã –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã")
        print("2. üìñ –ü—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–∞")
        print("3. ‚ú® –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —à–∞–±–ª–æ–Ω")
        print("4. ü§ñ –¢–µ—Å—Ç –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –≤—Å—Ç—Ä–µ—á–∏")
        print("5. üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤")
        print("6. üì§ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω")
        print("7. üì• –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω")
        print("8. üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
        print("9. ‚ùå –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-9): ").strip()
        
        try:
            if choice == "1":
                show_available_templates()
            elif choice == "2":
                preview_template()
            elif choice == "3":
                create_custom_template()
            elif choice == "4":
                test_auto_detection()
            elif choice == "5":
                template_statistics()
            elif choice == "6":
                export_template()
            elif choice == "7":
                import_template()
            elif choice == "8":
                reset_templates_config()
            elif choice == "9":
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                
        except KeyboardInterrupt:
            print("\n\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            break
        except Exception as e:
            print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ")

if __name__ == "__main__":
    main()