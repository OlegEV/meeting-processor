#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤
"""

import os
import sys
from pathlib import Path
import datetime
from meeting_processor import MeetingProcessor

def analyze_file_datetime(file_path: str):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è —Ñ–∞–π–ª–∞"""
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    processor = MeetingProcessor("test", "test")
    
    print(f"üìÅ –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–ê: {Path(file_path).name}")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    file_type, file_ext, file_info = processor.get_audio_info(file_path)
    print(f"üìä –¢–∏–ø —Ñ–∞–π–ª–∞: {file_type} ({file_ext})")
    print(f"‚ÑπÔ∏è  {file_info}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏
    datetime_info = processor.get_file_datetime_info(file_path)
    
    print(f"\nüìÖ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –î–ê–¢–ï –ò –í–†–ï–ú–ï–ù–ò:")
    print("=" * 35)
    print(f"üìÖ –î–∞—Ç–∞: {datetime_info['date']}")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime_info['time']}")
    print(f"üìã –ü–æ–ª–Ω–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è: {datetime_info['datetime_full']}")
    print(f"üìÜ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {datetime_info['weekday_ru']}")
    print(f"üóìÔ∏è –ú–µ—Å—è—Ü: {datetime_info['month_ru']}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è
    file_age = datetime.datetime.now() - datetime_info['datetime']
    
    if file_age.days == 0:
        age_str = "—Å–µ–≥–æ–¥–Ω—è"
    elif file_age.days == 1:
        age_str = "–≤—á–µ—Ä–∞"
    elif file_age.days < 7:
        age_str = f"{file_age.days} –¥–Ω–µ–π –Ω–∞–∑–∞–¥"
    elif file_age.days < 30:
        weeks = file_age.days // 7
        age_str = f"{weeks} –Ω–µ–¥–µ–ª—å –Ω–∞–∑–∞–¥"
    elif file_age.days < 365:
        months = file_age.days // 30
        age_str = f"{months} –º–µ—Å—è—Ü–µ–≤ –Ω–∞–∑–∞–¥"
    else:
        years = file_age.days // 365
        age_str = f"{years} –ª–µ—Ç –Ω–∞–∑–∞–¥"
    
    print(f"‚è≥ –í–æ–∑—Ä–∞—Å—Ç —Ñ–∞–π–ª–∞: {age_str}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –¥–Ω—è
    hour = datetime_info['datetime'].hour
    if 5 <= hour < 12:
        time_of_day = "—É—Ç—Ä–æ–º"
    elif 12 <= hour < 17:
        time_of_day = "–¥–Ω–µ–º"
    elif 17 <= hour < 22:
        time_of_day = "–≤–µ—á–µ—Ä–æ–º"
    else:
        time_of_day = "–Ω–æ—á—å—é"
    
    print(f"üåÖ –í—Ä–µ–º—è —Å—É—Ç–æ–∫: {time_of_day}")
    
    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π —Ç–∏–ø –≤—Å—Ç—Ä–µ—á–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    if datetime_info['weekday_ru'] in ['—Å—É–±–±–æ—Ç–∞', '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']:
        meeting_type = "–≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å (–≤–æ–∑–º–æ–∂–Ω–æ –ª–∏—á–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞)"
    elif 9 <= hour <= 18:
        meeting_type = "—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è (–¥–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞)"
    elif 18 < hour <= 22:
        meeting_type = "–≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è (–Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞)"
    else:
        meeting_type = "–Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –≤—Ä–µ–º—è"
    
    print(f"üíº –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π —Ç–∏–ø: {meeting_type}")

def analyze_filename_patterns(file_path: str):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞"""
    
    filename = Path(file_path).stem
    print(f"\nüîç –ê–ù–ê–õ–ò–ó –ò–ú–ï–ù–ò –§–ê–ô–õ–ê:")
    print("=" * 25)
    print(f"üìù –ò–º—è —Ñ–∞–π–ª–∞: {filename}")
    
    # –ò—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–∞—Ç—ã –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    import re
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–∞—Ç
    date_patterns = [
        (r'(\d{4})-(\d{2})-(\d{2})', 'YYYY-MM-DD'),
        (r'(\d{2})\.(\d{2})\.(\d{4})', 'DD.MM.YYYY'),
        (r'(\d{2})/(\d{2})/(\d{4})', 'DD/MM/YYYY'),
        (r'(\d{8})', 'YYYYMMDD'),
    ]
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –≤—Ä–µ–º–µ–Ω–∏
    time_patterns = [
        (r'(\d{2}):(\d{2}):(\d{2})', 'HH:MM:SS'),
        (r'(\d{2})-(\d{2})-(\d{2})', 'HH-MM-SS'),
        (r'(\d{6})', 'HHMMSS'),
    ]
    
    found_dates = []
    found_times = []
    
    for pattern, format_desc in date_patterns:
        matches = re.findall(pattern, filename)
        if matches:
            found_dates.append((matches[0], format_desc))
    
    for pattern, format_desc in time_patterns:
        matches = re.findall(pattern, filename)
        if matches:
            found_times.append((matches[0], format_desc))
    
    if found_dates:
        print("üìÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–∞—Ç—ã –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞:")
        for date_match, format_desc in found_dates:
            print(f"   {' '.join(date_match)} (—Ñ–æ—Ä–º–∞—Ç: {format_desc})")
    else:
        print("üìÖ –î–∞—Ç –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
    
    if found_times:
        print("‚è∞ –ù–∞–π–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞:")
        for time_match, format_desc in found_times:
            print(f"   {' '.join(time_match)} (—Ñ–æ—Ä–º–∞—Ç: {format_desc})")
    else:
        print("‚è∞ –í—Ä–µ–º–µ–Ω–∏ –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")

def show_protocol_preview(file_path: str):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–≤—å—é —Ç–æ–≥–æ, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª"""
    
    processor = MeetingProcessor("test", "test")
    datetime_info = processor.get_file_datetime_info(file_path)
    
    print(f"\nüìã –ü–†–ï–í–¨–Æ –ü–†–û–¢–û–ö–û–õ–ê:")
    print("=" * 20)
    
    preview = f"""
üìã –ü–†–û–¢–û–ö–û–õ –í–°–¢–†–ï–ß–ò

–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏: {datetime_info['datetime_full']}
–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {datetime_info['weekday_ru']}
–ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª: {Path(file_path).name}

–£—á–∞—Å—Ç–Ω–∏–∫–∏ –≤—Å—Ç—Ä–µ—á–∏: [–±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∏–∑ –∞—É–¥–∏–æ]

–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –≤—Å—Ç—Ä–µ—á–∏: [–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ Claude]

–û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã: [–∞–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞]

–ü—Ä–∏–Ω—è—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è: [–∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞]

–ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ: [–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ—á–∏]

–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏: [–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ –æ–±—Å—É–∂–¥–µ–Ω–∏—è]

---
–¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
- –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {datetime_info['datetime_full']}
- –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {datetime_info['weekday_ru']}
- –ü—Ä–æ—Ç–æ–∫–æ–ª —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏
"""
    
    print(preview)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üìÖ –ê–ù–ê–õ–ò–ó–ê–¢–û–† –î–ê–¢–´ –ò –í–†–ï–ú–ï–ù–ò –ú–ï–î–ò–ê–§–ê–ô–õ–û–í")
    print("=" * 50)
    
    if len(sys.argv) > 1:
        file_path = sys.argv[1]
    else:
        file_path = input("üìÅ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: ").strip().strip('"')
    
    if not file_path:
        print("‚ùå –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –Ω–µ —É–∫–∞–∑–∞–Ω")
        return
    
    analyze_file_datetime(file_path)
    analyze_filename_patterns(file_path)
    show_protocol_preview(file_path)
    
    print(f"\nüí° –ö–ê–ö –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨:")
    print("=" * 20)
    print("1. –≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª")
    print("2. –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –±–µ—Ä—É—Ç—Å—è –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞")
    print("3. Claude –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
    print("4. –í —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –¥–∞—Ç–æ–π/–≤—Ä–µ–º–µ–Ω–µ–º")
    
    print(f"\nüöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É:")
    print(f"python meeting_processor.py \"{file_path}\"")

if __name__ == "__main__":
    main()